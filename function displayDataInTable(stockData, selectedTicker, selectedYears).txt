function displayDataInTable(stockData, selectedTicker, selectedYears) {
    let dataToDisplay = [];
    let columnNames = ['Date', 'Open', 'Close', 'High', 'Low'];

    if (selectedTicker === "Select All") {
        // Clear previous tabs and content
        $('#dataDisplay').empty(); // Clear the container

        for (let sdata of stockData) {
            let tableId = sdata.ticker + "_table";
            $('#dataDisplay').append('<h2>' + sdata.ticker + '</h2><table id="' + tableId + '" class="display"></table>');

            for (let i = 0; i < sdata.dates.length; i++) {
                let year = new Date(sdata.dates[i]).getFullYear();
                if (selectedYears.includes(year) || selectedYears === "Select All") {
                    dataToDisplay.push([sdata.dates[i], sdata.open[i], sdata.close[i], sdata.high[i], sdata.low[i]]);
                }
            }

            $('#' + tableId).DataTable({
                data: dataToDisplay,
                columns: columnNames.map(name => ({ title: name })),
                destroy: true
            });

            dataToDisplay = []; // Reset for the next ticker
        }
    } else {
        for (let sdata of stockData) {
            if (sdata.ticker === selectedTicker) {
                for (let i = 0; i < sdata.dates.length; i++) {
                    let year = new Date(sdata.dates[i]).getFullYear();
                    if (selectedYears.includes(year) || selectedYears === "All") {
                        dataToDisplay.push([sdata.dates[i], sdata.open[i], sdata.close[i], sdata.high[i], sdata.low[i]]);
                    }
                }
                break;
            }
        }

        $('#dataTable').DataTable({
            data: dataToDisplay,
            columns: columnNames.map(name => ({ title: name })),
            destroy: true // This allows you to reinitialize the table
        });
    }
}



